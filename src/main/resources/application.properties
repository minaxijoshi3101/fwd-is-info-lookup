api.payment.mapping=/api/product/general
api.policy.issuance.mapping=/api/order
api.quotation.mapping=/api/product/general
api.home.insurance.mapping=/api/product
api.addon.insurance.mapping=/api/addons/v1
api.car.insurance.mapping=/api/product
api.pa.insurance.mapping=/api/product
api.maid.insurance.mapping=/api/product
api.commcar.insurance.mapping=/api/product
api.motorcycle.insurance.mapping=/api/product
api.d2c.quotation.mapping=/api/d2c

rest.template.connection.timeout=10000
rest.template.read.timeout=0

logging.meter.registry.step=10000
management.metrics.enable.tomcat=false
management.metrics.enable.jvm= false
management.metrics.enable.process= false
management.metrics.enable.hikaricp= false
management.metrics.enable.system= false
management.metrics.enable.jdbc= false
management.metrics.enable.http= false
management.metrics.enable.logback= false
management.metrics.enable.log4j2= false

spring.servlet.multipart.max-file-size=25MB
spring.servlet.multipart.max-request-size=25MB

log.file.location=./logs

#==-----------------------------------------------------------
# Status Codes
#==-----------------------------------------------------------
api.success.status.code=0
database.connection.status.code=1
service.unreachable.status.code=2
internal.error.status.code=3
request.failed.status.code=5
is.ebao.error.status.code=11
process.failed.status.code=13

#==-----------------------------------------------------------
# Campaign
#==-----------------------------------------------------------
campaign.service.mock=false
affiliate.mark.issued.adaptor.mock=false
affiliate.mark.issued.enabled=true

#==-----------------------------------------------------------
# TSofa
#==-----------------------------------------------------------
tsofa.service.mock=false

#==-----------------------------------------------------------
# ClientF
#==-----------------------------------------------------------
clientf.service.transaction.type=NB
clientf.service.mock=false

#==-----------------------------------------------------------
# Mailer Service
#==-----------------------------------------------------------
mailer.service.mock.enable=false

#==-----------------------------------------------------------
# CCR
#==-----------------------------------------------------------
feature.ccr=true
ccr.service.ignore.ssl=true
ccr.service.mock=false

#==-----------------------------------------------------------
# EBAO
#==-----------------------------------------------------------
ebao.service.mock=false


#==-----------------------------------------------------------
# Miscellaneous Service
#==-----------------------------------------------------------
# fwd auth-service
fwd.auth.service.mock=false

# fwd portal service
fwd.portal.service.mock=false

# customer-profile
fwd.customer.portal.mock=false


#==-----------------------------------------------------------
# Product Codes for all product
#==-----------------------------------------------------------
home.product.code=HM
car.product.code=PV_V2
pa.product.code=PA
maid.product.code=MD
commcar.product.code=CV
motorcycle.product.code=MC

#==-----------------------------------------------------------
# Car specific properties
#==-----------------------------------------------------------
motorversion2.date=15-01-2017

#==-----------------------------------------------------------
# PA specific properties
#==-----------------------------------------------------------
pa.parnter.flag.enabled=false

#==-----------------------------------------------------------
# Maid specific properties
#==-----------------------------------------------------------
maidversion2.date=15-01-2017
mock.checkPromo=false
mock.promoValue=6

#==-----------------------------------------------------------
# Motorcycle specific properties
#==-----------------------------------------------------------
motorcycversion2.date=01-01-2017
motorcycversion3.date=30-01-2019

#==-----------------------------------------------------------
# Client specific properties
#==-----------------------------------------------------------
client.load.redirect.url=/redirect?from=email&hash=

#==-----------------------------------------------------------
# D2C properties
#==-----------------------------------------------------------
fwd.comm.service.mock=false
fwd.cms.service.mock=false

fwd.d2c.product.home.coverage=/coverage/home?render=json
fwd.d2c.product.car.coverage=/coverage/car?render=json
fwd.d2c.product.pa.coverage=/coverage/personal-accident?render=json
fwd.d2c.product.mc.coverage=/coverage/motorcycle?render=json
fwd.d2c.product.commcar-comprehensive.coverage=/coverage/commcar-comprehensive?render=json
fwd.d2c.product.fr.coverage=/coverage/fr?render=json

#==-----------------------------------------------------------
# Redis properties
#==-----------------------------------------------------------
spring.cache.type=redis
redis.cache-null-values=flase
redis.time-to-live=0
redis.use-key-prefix=true
redis.key-prefix=fwd_
redis.cache.ttl.productStructure=86400000
redis.cache.ttl.motorRiderOrder=86400000

spring.redis.lettuce.pool.max-active=7 
spring.redis.lettuce.pool.max-idle=7
spring.redis.lettuce.pool.min-idle=2
spring.redis.lettuce.pool.max-wait=-1ms
spring.redis.lettuce.shutdown-timeout=200ms

#==-----------------------------------------------------------
# Info Lookup Microservice Properties
#==-----------------------------------------------------------
spring.application.name=Info Lookup Service API

#############################################################
#==-----------------------------------------------------------
# API Controller Configuration
#==-----------------------------------------------------------
# Home Info Lookup
api.home.info.lookup.enabled=true

# Car Info Service
api.car.info.service.enabled=true

# PA Info Service
api.pa.info.service.enabled=true

#==-----------------------------------------------------------
# HOME
#==-----------------------------------------------------------
# Landed Payload
home.landed.data={ "code": "Landed", "description": "Landed", "id": "Landed", "roomTypes": [ { "Code": 0, "Description": "Landed", "Id": "Landed" } ] }
# Homeowner
homeowner.data=[ { "code": 0, "description": "living in", "id": "Homeowner" }, { "code": 1, "description": "renting out (partially or fully)", "id": "Landlord" } ]
# Tenant
tenant.data=[ { "code": 2, "description": "Tenant", "id": "Tenant" } ]

#==-----------------------------------------------------------
# CAR
#==-----------------------------------------------------------
car.product.structure.table.names={make:'Make', maritalStatus:'MaritalStatus', drivingExp:'DrivingExperience', noOfClaims:'PolicyRiskVEHICLENoofClaimyears_String', ncd:'PolicyRiskVEHICLENCD', demerit:'YesNo', finance:'PolicyRiskVEHICLEFinanceCompany'}

#==-----------------------------------------------------------
# Get Product Structure API Configurations
#==-----------------------------------------------------------
contries.list.file.path=/mock/countries.json
policy.details.file.path=/mock/policyDetails.json
